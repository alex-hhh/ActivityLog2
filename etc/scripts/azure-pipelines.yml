# Azure Pipelines build file for ActivityLog2.  See README.md for details.

jobs:

# ......................................................... LINUX BUILD ....

  - job: Linux
    pool:
      vmImage: 'ubuntu-22.04'

    variables:
      RACKET_VERSION: 8.14-cs
      RACKET_DIR: $(Agent.BuildDirectory)/racket
      runTests: true

    steps:
    - script: |
        bash ./etc/scripts/install-racket.sh
        echo "##vso[task.setvariable variable=path]$(PATH):$(RACKET_DIR)/bin"
      displayName: Install Racket $(RACKET_VERSION)

    - template: azure-common.yml

# ....................................................... WINDOWS BUILD ....

  - job: Windows
    pool:
      vmImage: 'windows-2019'

    variables:
      RACKET_VERSION: 8.14-cs
      RACKET_DIR: 'C:/Program Files/Racket'

      # The windows build (and especially the tests) take a long time.  The
      # tests run on Linux already and they are not platform specific, so we
      # disable them on windows for now.

      runTests: false

    steps:
    - powershell: |
        .\etc\scripts\install-racket.ps1
        Write-Host "##vso[task.setvariable variable=path]$Env:PATH;$Env:RACKET_DIR"
      displayName: Install Racket $(RACKET_VERSION)

    - template: azure-common.yml

    # It appears that the download happens early in the build pipeline, before
    # even the source is checked out, regardless of the position of the
    # dowload secure file task in the file...

    - task: DownloadSecureFile@1
      inputs:
        secureFile: al2_sign.tar.gpg

    # - powershell: |
    #     .\etc\scripts\install-inno-setup.ps1
    #     Write-Host "##vso[task.setvariable variable=path]$Env:PATH;$Env:LOCALAPPDATA\Inno Setup 6"
    #   displayName: Install InnoSetup

    # Update the version, product name and description in the resulting
    # executable using verpatch.exe, than create an installer using Inno
    # Setup.  The script below reads the version from version.txt, and it is
    # important that the first line in that file contains no spaces.  Note
    # that this should be in a separate script...

    - script: |
        set /p APP_VERSION=<version.txt
        set V=%APP_VERSION%
        set PV=%APP_VERSION%.%BUILD_BUILDID%
        set D=ActivityLog2 - Analyze Swim, Bike and Run Data
        set P=ActivityLog2
        etc\scripts\verpatch .\dist\ActivityLog2.exe %V% /s desc "%D%" /s product %P% /pv %PV%
        racket etc\scripts\make-checksums.rkt dist ./dist/manifest-sha256.txt
      displayName: Preparing Distribution

    - script: |
    - bash: bash ./etc/scripts/sign-manifest.sh
      env:
        SIGNDATAPW: $(SIGNDATAPW)
      displayName: (Maybe) Sign Manifest File

    - script: |
        set /p APP_VERSION=<version.txt
        iscc /DMyAppVersion=%APP_VERSION% etc\scripts\install.iss
      displayName: Creating Installer

    - bash: bash ./etc/scripts/sign-release.sh
      env:
        SIGNDATAPW: $(SIGNDATAPW)
      displayName: (Maybe) Sign Installer

    - task: CopyFiles@2
      displayName: Move Installer Files to Staging Area
      inputs:
        targetFolder: $(Build.ArtifactStagingDirectory)
        contents: ActivityLog2Setup-*.*

    - task: PublishBuildArtifacts@1
      displayName: Publish Installer Artifacts
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: ActivityLog2Setup
