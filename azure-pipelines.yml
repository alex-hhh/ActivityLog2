# Azure Pipelines build and test file for ActivityLog2.  The aim is to check
# that the application builds correctly and automated tests pass.  The build
# step runs build.rkt which also creates a distribution (in the past, creating
# a distribution has failed due to bad paths in `define-runtime-path`).

# Some of the tests depend on data that is downloaded from Google Drive, this
# is private data and it is encrypted.  It is downloaded by the `fetch.sh`
# script.  This requires access to the decryption key which is stored in Azure
# Pipelines and mapped to builds from this repository, but not for builds from
# outside the repository -- for those builds, the test data will not be
# downloaded, and tests that depend on it will be bypasses silently (they will
# not fail).

# YAML schema reference: https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  RACKET_DIR: $(Agent.BuildDirectory)/racket
  RACKET_VERSION: 7.2
  DISPLAY: :99.0

steps:

- script: bash ./etc/scripts/install-racket.sh
  displayName: 'Installing Racket $(RACKET_VERSION)'

  # This is needed to run the tests.  Since it takes a while to start up, we
  # run it early in the build.

- script: (/usr/bin/Xvfb :99 -screen 0 1280x1024x24 &)
  displayName: "Starting Xvfb on DISPLAY=$(DISPLAY)"

- script: |
    bash ./etc/scripts/fetch.sh -C test "1l-COKZ8pMef4JUX6E7HBVEEYMAYO2Noo" # test-db
    bash ./etc/scripts/fetch.sh -C test "1s5de2Ij8Q-E7fDOwKzj0AB9CU5e3wWXY" # test-fit
  env:
    TESTDATAPW: $(TESTDATAPW)
  displayName: "Downloading Test Data"

- script: $(RACKET_DIR)/bin/racket build.rkt
  displayName: 'Building Application'

  # We run each test suite as a separate step as it looks nice in the Azure
  # Pipelines log.

- script: $(RACKET_DIR)/bin/raco test test/df-test.rkt
  displayName: "Running Data Frame Tests (df-test)"

- script: $(RACKET_DIR)/bin/raco test test/db-test.rkt
  displayName: "Running Database Import Tests (db-test)"

- script: $(RACKET_DIR)/bin/raco test test/db-upgrade-test.rkt
  displayName: "Running Database Upgrade Tests (db-upgrade-test)"

- script: $(RACKET_DIR)/bin/raco test test/trends-test.rkt
  displayName: "Running Trends Chart Tests (trends-test)"

- script: $(RACKET_DIR)/bin/raco test test/aggregate-test.rkt
  displayName: "Running Agregate Data Tests (aggregate-test)"

- script: $(RACKET_DIR)/bin/raco test test/fit-test.rkt
  displayName: "Running File Import Tests (fit-test)"
